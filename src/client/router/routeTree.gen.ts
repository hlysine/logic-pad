/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './../routes/__root'
import { Route as AuthRouteImport } from './../routes/auth'
import { Route as IndexRouteImport } from './../routes/index'
import { Route as OauthCallbackRouteImport } from './../routes/oauth.callback'
import { Route as ContextLayoutSolveIndexRouteImport } from './../routes/_context._layout.solve.index'
import { Route as ContextLayoutPerfectionIndexRouteImport } from './../routes/_context._layout.perfection.index'
import { Route as ContextLayoutCreateIndexRouteImport } from './../routes/_context._layout.create.index'
import { Route as ContextLayoutSolvePuzzleIdRouteImport } from './../routes/_context._layout.solve.$puzzleId'
import { Route as ContextLayoutCreatePuzzleIdRouteImport } from './../routes/_context._layout.create.$puzzleId'

const ContextLazyRouteImport = createFileRoute('/_context')()
const ContextLayoutLazyRouteImport = createFileRoute('/_context/_layout')()

const ContextLazyRoute = ContextLazyRouteImport.update({
  id: '/_context',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./../routes/_context.lazy').then((d) => d.Route))
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ContextLayoutLazyRoute = ContextLayoutLazyRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ContextLazyRoute,
} as any).lazy(() =>
  import('./../routes/_context._layout.lazy').then((d) => d.Route),
)
const OauthCallbackRoute = OauthCallbackRouteImport.update({
  id: '/oauth/callback',
  path: '/oauth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const ContextLayoutSolveIndexRoute = ContextLayoutSolveIndexRouteImport.update({
  id: '/solve/',
  path: '/solve/',
  getParentRoute: () => ContextLayoutLazyRoute,
} as any).lazy(() =>
  import('./../routes/_context._layout.solve.index.lazy').then((d) => d.Route),
)
const ContextLayoutPerfectionIndexRoute =
  ContextLayoutPerfectionIndexRouteImport.update({
    id: '/perfection/',
    path: '/perfection/',
    getParentRoute: () => ContextLayoutLazyRoute,
  } as any).lazy(() =>
    import('./../routes/_context._layout.perfection.index.lazy').then(
      (d) => d.Route,
    ),
  )
const ContextLayoutCreateIndexRoute =
  ContextLayoutCreateIndexRouteImport.update({
    id: '/create/',
    path: '/create/',
    getParentRoute: () => ContextLayoutLazyRoute,
  } as any).lazy(() =>
    import('./../routes/_context._layout.create.index.lazy').then(
      (d) => d.Route,
    ),
  )
const ContextLayoutSolvePuzzleIdRoute =
  ContextLayoutSolvePuzzleIdRouteImport.update({
    id: '/solve/$puzzleId',
    path: '/solve/$puzzleId',
    getParentRoute: () => ContextLayoutLazyRoute,
  } as any).lazy(() =>
    import('./../routes/_context._layout.solve.$puzzleId.lazy').then(
      (d) => d.Route,
    ),
  )
const ContextLayoutCreatePuzzleIdRoute =
  ContextLayoutCreatePuzzleIdRouteImport.update({
    id: '/create/$puzzleId',
    path: '/create/$puzzleId',
    getParentRoute: () => ContextLayoutLazyRoute,
  } as any).lazy(() =>
    import('./../routes/_context._layout.create.$puzzleId.lazy').then(
      (d) => d.Route,
    ),
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/oauth/callback': typeof OauthCallbackRoute
  '/create/$puzzleId': typeof ContextLayoutCreatePuzzleIdRoute
  '/solve/$puzzleId': typeof ContextLayoutSolvePuzzleIdRoute
  '/create': typeof ContextLayoutCreateIndexRoute
  '/perfection': typeof ContextLayoutPerfectionIndexRoute
  '/solve': typeof ContextLayoutSolveIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/oauth/callback': typeof OauthCallbackRoute
  '/create/$puzzleId': typeof ContextLayoutCreatePuzzleIdRoute
  '/solve/$puzzleId': typeof ContextLayoutSolvePuzzleIdRoute
  '/create': typeof ContextLayoutCreateIndexRoute
  '/perfection': typeof ContextLayoutPerfectionIndexRoute
  '/solve': typeof ContextLayoutSolveIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth': typeof AuthRoute
  '/_context': typeof ContextLazyRouteWithChildren
  '/oauth/callback': typeof OauthCallbackRoute
  '/_context/_layout': typeof ContextLayoutLazyRouteWithChildren
  '/_context/_layout/create/$puzzleId': typeof ContextLayoutCreatePuzzleIdRoute
  '/_context/_layout/solve/$puzzleId': typeof ContextLayoutSolvePuzzleIdRoute
  '/_context/_layout/create/': typeof ContextLayoutCreateIndexRoute
  '/_context/_layout/perfection/': typeof ContextLayoutPerfectionIndexRoute
  '/_context/_layout/solve/': typeof ContextLayoutSolveIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/oauth/callback'
    | '/create/$puzzleId'
    | '/solve/$puzzleId'
    | '/create'
    | '/perfection'
    | '/solve'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/oauth/callback'
    | '/create/$puzzleId'
    | '/solve/$puzzleId'
    | '/create'
    | '/perfection'
    | '/solve'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/_context'
    | '/oauth/callback'
    | '/_context/_layout'
    | '/_context/_layout/create/$puzzleId'
    | '/_context/_layout/solve/$puzzleId'
    | '/_context/_layout/create/'
    | '/_context/_layout/perfection/'
    | '/_context/_layout/solve/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRoute
  ContextLazyRoute: typeof ContextLazyRouteWithChildren
  OauthCallbackRoute: typeof OauthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_context': {
      id: '/_context'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContextLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_context/_layout': {
      id: '/_context/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ContextLayoutLazyRouteImport
      parentRoute: typeof ContextLazyRoute
    }
    '/oauth/callback': {
      id: '/oauth/callback'
      path: '/oauth/callback'
      fullPath: '/oauth/callback'
      preLoaderRoute: typeof OauthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_context/_layout/solve/': {
      id: '/_context/_layout/solve/'
      path: '/solve'
      fullPath: '/solve'
      preLoaderRoute: typeof ContextLayoutSolveIndexRouteImport
      parentRoute: typeof ContextLayoutLazyRoute
    }
    '/_context/_layout/perfection/': {
      id: '/_context/_layout/perfection/'
      path: '/perfection'
      fullPath: '/perfection'
      preLoaderRoute: typeof ContextLayoutPerfectionIndexRouteImport
      parentRoute: typeof ContextLayoutLazyRoute
    }
    '/_context/_layout/create/': {
      id: '/_context/_layout/create/'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof ContextLayoutCreateIndexRouteImport
      parentRoute: typeof ContextLayoutLazyRoute
    }
    '/_context/_layout/solve/$puzzleId': {
      id: '/_context/_layout/solve/$puzzleId'
      path: '/solve/$puzzleId'
      fullPath: '/solve/$puzzleId'
      preLoaderRoute: typeof ContextLayoutSolvePuzzleIdRouteImport
      parentRoute: typeof ContextLayoutLazyRoute
    }
    '/_context/_layout/create/$puzzleId': {
      id: '/_context/_layout/create/$puzzleId'
      path: '/create/$puzzleId'
      fullPath: '/create/$puzzleId'
      preLoaderRoute: typeof ContextLayoutCreatePuzzleIdRouteImport
      parentRoute: typeof ContextLayoutLazyRoute
    }
  }
}

interface ContextLayoutLazyRouteChildren {
  ContextLayoutCreatePuzzleIdRoute: typeof ContextLayoutCreatePuzzleIdRoute
  ContextLayoutSolvePuzzleIdRoute: typeof ContextLayoutSolvePuzzleIdRoute
  ContextLayoutCreateIndexRoute: typeof ContextLayoutCreateIndexRoute
  ContextLayoutPerfectionIndexRoute: typeof ContextLayoutPerfectionIndexRoute
  ContextLayoutSolveIndexRoute: typeof ContextLayoutSolveIndexRoute
}

const ContextLayoutLazyRouteChildren: ContextLayoutLazyRouteChildren = {
  ContextLayoutCreatePuzzleIdRoute: ContextLayoutCreatePuzzleIdRoute,
  ContextLayoutSolvePuzzleIdRoute: ContextLayoutSolvePuzzleIdRoute,
  ContextLayoutCreateIndexRoute: ContextLayoutCreateIndexRoute,
  ContextLayoutPerfectionIndexRoute: ContextLayoutPerfectionIndexRoute,
  ContextLayoutSolveIndexRoute: ContextLayoutSolveIndexRoute,
}

const ContextLayoutLazyRouteWithChildren =
  ContextLayoutLazyRoute._addFileChildren(ContextLayoutLazyRouteChildren)

interface ContextLazyRouteChildren {
  ContextLayoutLazyRoute: typeof ContextLayoutLazyRouteWithChildren
}

const ContextLazyRouteChildren: ContextLazyRouteChildren = {
  ContextLayoutLazyRoute: ContextLayoutLazyRouteWithChildren,
}

const ContextLazyRouteWithChildren = ContextLazyRoute._addFileChildren(
  ContextLazyRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRoute,
  ContextLazyRoute: ContextLazyRouteWithChildren,
  OauthCallbackRoute: OauthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
